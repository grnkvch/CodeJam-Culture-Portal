{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/languageSwitcher.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["SEO","_ref","description","lang","meta","keywords","title","react_default","a","createElement","gatsby_browser_entry","query","detailsQuery","render","data","metaDescription","site","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_1025518380","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","__webpack_require__","d","__webpack_exports__","withI18next","withNamespaces","t","layout","seo","m","module","exports","require","default","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","object","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","LanguageSwitcher","changeLng","lng","availableLngs","class","onChange","e","target","value","map","key","selected","languageSwitcher","gatsby_plugin_i18next","lngProps","languageSwitcher_LanguageSwitcher","Header","className","style","margin","maxWidth","padding","id","to","position","top","left","Layout","Fragment","hreflang","components_header","paddingTop","node"],"mappings":"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","file":"component---src-pages-404-js-063bd067db2c8f46c8f1.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { withI18next } from 'gatsby-plugin-i18next';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst NotFoundPage = ({ t }) => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>404 {t(`errTitle`)}</h1>\r\n    <p>{t(`errDescription`)}</p>\r\n  </Layout>\r\n)\r\n\r\nexport default withI18next()(withNamespaces()(NotFoundPage));\r\n\r\nexport const query = graphql`\r\n  query($lng: String!) {\r\n    locales: allLocale(filter: { lng: { eq: $lng }, ns: { eq: \"messages\" } }) {\r\n      ...TranslationFragment\r\n    }\r\n  }\r\n`;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\nimport { Language } from 'gatsby-plugin-i18next';\r\nimport \"./LanguageSwitcher.css\"\r\n\r\nconst LanguageSwitcher = ({ changeLng, lng, availableLngs }) => (\r\n  <select class=\"languageSelect\" onChange={(e) => changeLng(e.target.value)}>\r\n    {\r\n      availableLngs.map((value) => (\r\n        <option key={value} selected={lng === value}>{value}</option>\r\n      ))\r\n    };\r\n  </select>);\r\n\r\nexport default props => (\r\n  <Language>{lngProps => <LanguageSwitcher {...props} {...lngProps} />}</Language>\r\n);","import { Link } from 'gatsby-plugin-i18next';\r\nimport React from 'react'\r\nimport LanguageSwitcher from './languageSwitcher';\r\nimport \"./header.css\"\r\n\r\nconst Header = ({ t }) => (\r\n  <div className = \"header-wrapper\">\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 className=\"headLogo\" id=\"toTop\">\r\n        <Link \r\n          to=\"/\"\r\n        >\r\n          {t(`headTitle`)}\r\n        </Link>\r\n      </h1>\r\n      <nav className=\"navHeader\">\r\n        <div><Link to=\"/\">{t(`headMain`)}</Link></div>\r\n        <div><Link to=\"/search\">{t(`headToList`)}</Link></div>\r\n      </nav>\r\n      <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n      }}\r\n    >\r\n      <LanguageSwitcher />\r\n    </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { Head } from 'gatsby-plugin-i18next';\r\n\r\n\r\nimport Header from './header'\r\nimport './layout.scss'\r\n\r\nconst Layout = ({ children, data, t }) => (\r\n      <>\r\n        <Head hreflang>\r\n        <title>{t('headTitle')}</title>\r\n        <meta name=\"description\" content=\"Architects of Belarus\" />\r\n        <meta name=\"keywords\" content=\"Architects, Belarus\" />\r\n      </Head>\r\n        <Header t={ t }/>\r\n        <div style={{\r\n              margin: `0 auto`,\r\n              maxWidth: 960,\r\n              padding: `0px 1.0875rem 1.45rem`,\r\n              paddingTop: 0,\r\n        }}>\r\n          {children}\r\n        </div>\r\n      </>\r\n    )\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default withNamespaces()(Layout);\r\n"],"sourceRoot":""}